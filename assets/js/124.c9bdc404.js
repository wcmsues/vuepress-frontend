(window.webpackJsonp=window.webpackJsonp||[]).push([[124],{546:function(t,a,e){"use strict";e.r(a);var s=e(65),n=Object(s.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"video-audio"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#video-audio"}},[t._v("#")]),t._v(" video，audio")]),t._v(" "),e("h2",{attrs:{id:"概述"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#概述"}},[t._v("#")]),t._v(" 概述")]),t._v(" "),e("p",[e("code",[t._v("<video>")]),t._v("元素用来加载视频，是"),e("code",[t._v("HTMLVideoElement")]),t._v("对象的实例。"),e("code",[t._v("<audio>")]),t._v("元素用来加载音频，是"),e("code",[t._v("HTMLAudioElement")]),t._v("对象的实例。而"),e("code",[t._v("HTMLVideoElement")]),t._v("和"),e("code",[t._v("HTMLAudioElement")]),t._v("都继承了"),e("code",[t._v("HTMLMediaElement")]),t._v("，所以这两个 HTML 元素有许多共同的属性和方法，可以放在一起介绍。")]),t._v(" "),e("p",[t._v("理论上，这两个 HTML 元素直接用"),e("code",[t._v("src")]),t._v("属性指定媒体文件，就可以使用了。")]),t._v(" "),e("div",{staticClass:"language-html line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-html"}},[e("code",[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("audio")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("src")]),e("span",{pre:!0,attrs:{class:"token attr-value"}},[e("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("background_music.mp3"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("video")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("src")]),e("span",{pre:!0,attrs:{class:"token attr-value"}},[e("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("news.mov"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),e("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("width")]),e("span",{pre:!0,attrs:{class:"token attr-value"}},[e("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),t._v("320")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("height")]),e("span",{pre:!0,attrs:{class:"token attr-value"}},[e("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),t._v("240/")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br")])]),e("p",[t._v("注意，"),e("code",[t._v("<video>")]),t._v("元素有"),e("code",[t._v("width")]),t._v("属性和"),e("code",[t._v("height")]),t._v("属性，可以指定宽和高。"),e("code",[t._v("<audio>")]),t._v("元素没有这两个属性，因为它的播放器外形是浏览器给定的，不能指定。")]),t._v(" "),e("p",[t._v("实际上，不同的浏览器支持不同的媒体格式，我们不得不用"),e("code",[t._v("<source>")]),t._v("元素指定同一个媒体文件的不同格式。")]),t._v(" "),e("div",{staticClass:"language-html line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-html"}},[e("code",[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("audio")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("id")]),e("span",{pre:!0,attrs:{class:"token attr-value"}},[e("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("music"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("source")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("src")]),e("span",{pre:!0,attrs:{class:"token attr-value"}},[e("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("music.mp3"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),e("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("type")]),e("span",{pre:!0,attrs:{class:"token attr-value"}},[e("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("audio/mpeg"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("  \n  "),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("source")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("src")]),e("span",{pre:!0,attrs:{class:"token attr-value"}},[e("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("music.ogg"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),e("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("type")]),e("span",{pre:!0,attrs:{class:"token attr-value"}},[e("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("'")]),t._v("audio/ogg; codec="),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("vorbis"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("'")])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("audio")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br")])]),e("p",[t._v("浏览器遇到支持的格式，就会忽略后面的格式。")]),t._v(" "),e("p",[t._v("这两个元素都有一个"),e("code",[t._v("controls")]),t._v("属性，只有打开这个属性，才会显示控制条。注意，"),e("code",[t._v("<audio>")]),t._v("元素如果不打开"),e("code",[t._v("controls")]),t._v("属性，根本不会显示，而是直接在背景播放。")]),t._v(" "),e("h2",{attrs:{id:"htmlmediaelement-接口"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#htmlmediaelement-接口"}},[t._v("#")]),t._v(" HTMLMediaElement 接口")]),t._v(" "),e("p",[e("code",[t._v("HTMLMediaElement")]),t._v("并没有对应的 HTML 元素，而是作为"),e("code",[t._v("<video>")]),t._v("和"),e("code",[t._v("<audio>")]),t._v("的基类，定义一些它们共同的属性和方法。")]),t._v(" "),e("p",[e("code",[t._v("HTMLMediaElement")]),t._v("接口有以下属性。")]),t._v(" "),e("ul",[e("li",[t._v("HTMLMediaElement.audioTracks：返回一个类似数组的对象，表示媒体文件包含的音轨。")]),t._v(" "),e("li",[t._v("HTMLMediaElement.autoplay：布尔值，表示媒体文件是否自动播放，对应 HTML 属性"),e("code",[t._v("autoplay")]),t._v("。")]),t._v(" "),e("li",[t._v("HTMLMediaElement.buffered：返回一个 TimeRanges 对象，表示浏览器缓冲的内容。该对象的"),e("code",[t._v("length")]),t._v("属性返回缓存里面有多少段内容，"),e("code",[t._v("start(rangeId)")]),t._v("方法返回指定的某段内容（从0开始）开始的时间点，"),e("code",[t._v("end()")]),t._v("返回指定的某段内容结束的时间点。该属性只读。")]),t._v(" "),e("li",[t._v("HTMLMediaElement.controls：布尔值，表示是否显示媒体文件的控制栏，对应 HTML 属性"),e("code",[t._v("controls")]),t._v("。")]),t._v(" "),e("li",[t._v("HTMLMediaElement.controlsList：返回一个类似数组的对象，表示是否显示控制栏的某些控件。该对象包含三个可能的值："),e("code",[t._v("nodownload")]),t._v("、"),e("code",[t._v("nofullscreen")]),t._v("和"),e("code",[t._v("noremoteplayback")]),t._v("。该属性只读。")]),t._v(" "),e("li",[t._v("HTMLMediaElement.crossOrigin：字符串，表示跨域请求时是否附带用户信息（比如 Cookie），对应 HTML 属性"),e("code",[t._v("crossorigin")]),t._v("。该属性只有两个可能的值："),e("code",[t._v("anonymous")]),t._v("和"),e("code",[t._v("use-credentials")]),t._v("。")]),t._v(" "),e("li",[t._v("HTMLMediaElement.currentSrc：字符串，表示当前正在播放的媒体文件的绝对路径。该属性只读。")]),t._v(" "),e("li",[t._v("HTMLMediaElement.currentTime：浮点数，表示当前播放的时间点。")]),t._v(" "),e("li",[t._v("HTMLMediaElement.defaultMuted：布尔值，表示默认是否关闭音量，对应 HTML 属性"),e("code",[t._v("muted")]),t._v("。")]),t._v(" "),e("li",[t._v("HTMLMediaElement.defaultPlaybackRate：浮点数，表示默认的播放速率，默认是1.0。")]),t._v(" "),e("li",[t._v("HTMLMediaElement.disableRemotePlayback：布尔值，是否允许远程回放，即远程回放的时候是否会有工具栏。")]),t._v(" "),e("li",[t._v("HTMLMediaElement.duration：浮点数，表示媒体文件的时间长度（单位秒）。如果当前没有媒体文件，该属性返回0。该属性只读。")]),t._v(" "),e("li",[t._v("HTMLMediaElement.ended：布尔值，表示当前媒体文件是否已经播放结束。该属性只读。")]),t._v(" "),e("li",[t._v("HTMLMediaElement.error：返回最近一次报错的错误对象，如果没有报错，返回"),e("code",[t._v("null")]),t._v("。")]),t._v(" "),e("li",[t._v("HTMLMediaElement.loop：布尔值，表示媒体文件是否会循环播放，对应 HTML 属性"),e("code",[t._v("loop")]),t._v("。")]),t._v(" "),e("li",[t._v("HTMLMediaElement.muted：布尔值，表示音量是否关闭。")]),t._v(" "),e("li",[t._v("HTMLMediaElement.networkState：当前网络状态，共有四个可能的值。0表示没有数据；1表示媒体元素处在激活状态，但是还没开始下载；2表示下载中；3表示没有找到媒体文件。")]),t._v(" "),e("li",[t._v("HTMLMediaElement.paused：布尔值，表示媒体文件是否处在暂停状态。该属性只读。")]),t._v(" "),e("li",[t._v("HTMLMediaElement.playbackRate：浮点数，表示媒体文件的播放速度，1.0是正常速度。如果是负数，表示向后播放。")]),t._v(" "),e("li",[t._v("HTMLMediaElement.played：返回一个 TimeRanges 对象，表示播放的媒体内容。该属性只读。")]),t._v(" "),e("li",[t._v("HTMLMediaElement.preload：字符串，表示应该预加载哪些内容，可能的值为"),e("code",[t._v("none")]),t._v("、"),e("code",[t._v("metadata")]),t._v("和"),e("code",[t._v("auto")]),t._v("。")]),t._v(" "),e("li",[t._v("HTMLMediaElement.readyState：整数，表示媒体文件的准备状态，可能的值为0（没有任何数据）、1（已获取元数据）、2（可播放当前帧，但不足以播放多个帧）、3（可以播放多帧，至少为两帧）、4（可以流畅播放）。该属性只读。")]),t._v(" "),e("li",[t._v("HTMLMediaElement.seekable：返回一个 TimeRanges 对象，表示一个用户可以搜索的媒体内容范围。该属性只读。")]),t._v(" "),e("li",[t._v("HTMLMediaElement.seeking：布尔值，表示媒体文件是否正在寻找新位置。该属性只读。")]),t._v(" "),e("li",[t._v("HTMLMediaElement.src：字符串，表示媒体文件所在的 URL，对应 HTML 属性"),e("code",[t._v("src")]),t._v("。")]),t._v(" "),e("li",[t._v("HTMLMediaElement.srcObject：返回"),e("code",[t._v("src")]),t._v("属性对应的媒体文件资源，可能是"),e("code",[t._v("MediaStream")]),t._v("、"),e("code",[t._v("MediaSource")]),t._v("、"),e("code",[t._v("Blob")]),t._v("或"),e("code",[t._v("File")]),t._v("对象。直接指定这个属性，就可以播放媒体文件。")]),t._v(" "),e("li",[t._v("HTMLMediaElement.textTracks：返回一个类似数组的对象，包含所有文本轨道。该属性只读。")]),t._v(" "),e("li",[t._v("HTMLMediaElement.videoTracks：返回一个类似数组的对象，包含多有视频轨道。该属性只读。")]),t._v(" "),e("li",[t._v("HTMLMediaElement.volume：浮点数，表示音量。0.0 表示静音，1.0 表示最大音量。")])]),t._v(" "),e("p",[e("code",[t._v("HTMLMediaElement")]),t._v("接口有如下方法。")]),t._v(" "),e("ul",[e("li",[t._v("HTMLMediaElement.addTextTrack()：添加文本轨道（比如字幕）到媒体文件。")]),t._v(" "),e("li",[t._v("HTMLMediaElement.captureStream()：返回一个 MediaStream 对象，用来捕获当前媒体文件的流内容。")]),t._v(" "),e("li",[t._v("HTMLMediaElement.canPlayType()：该方法接受一个 MIME 字符串作为参数，用来判断这种类型的媒体文件是否可以播放。该方法返回一个字符串，有三种可能的值，"),e("code",[t._v("probably")]),t._v("表示似乎可播放，"),e("code",[t._v("maybe")]),t._v("表示无法在不播放的情况下判断是否可播放，空字符串表示无法播放。")]),t._v(" "),e("li",[t._v("HTMLMediaElement.fastSeek()：该方法接受一个浮点数作为参数，表示指定的时间（单位秒）。该方法将媒体文件移动到指定时间。")]),t._v(" "),e("li",[t._v("HTMLMediaElement.load()：重新加载媒体文件。")]),t._v(" "),e("li",[t._v("HTMLMediaElement.pause()：暂停播放。该方法没有返回值。")]),t._v(" "),e("li",[t._v("HTMLMediaElement.play()：开始播放。该方法返回一个 Promise 对象。")])]),t._v(" "),e("p",[t._v("下面是"),e("code",[t._v("play()")]),t._v("方法的一个例子。")]),t._v(" "),e("div",{staticClass:"language-javascript line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-javascript"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" myVideo "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("getElementById")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'myVideoElement'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nmyVideo\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("play")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("then")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'playing'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("catch")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("error")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("error"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br")])]),e("h2",{attrs:{id:"htmlvideoelement-接口"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#htmlvideoelement-接口"}},[t._v("#")]),t._v(" HTMLVideoElement 接口")]),t._v(" "),e("p",[e("code",[t._v("HTMLVideoElement")]),t._v("接口代表了"),e("code",[t._v("<video>")]),t._v("元素。这个接口继承了"),e("code",[t._v("HTMLMediaElement")]),t._v("接口，并且有一些自己的属性和方法。")]),t._v(" "),e("p",[t._v("HTMLVideoElement 接口的属性。")]),t._v(" "),e("ul",[e("li",[t._v("HTMLVideoElement.height：字符串，表示视频播放区域的高度（单位像素），对应 HTML 属性"),e("code",[t._v("height")]),t._v("。")]),t._v(" "),e("li",[t._v("HTMLVideoElement.width：字符串，表示视频播放区域的宽度（单位像素），对应 HTML 属性"),e("code",[t._v("width")]),t._v("。")]),t._v(" "),e("li",[t._v("HTMLVideoElement.videoHeight：该属性只读，返回一个整数，表示视频文件自身的高度（单位像素）。")]),t._v(" "),e("li",[t._v("HTMLVideoElement.videoWidth：该属性只读，返回一个整数，表示视频文件自身的宽度（单位像素）。")]),t._v(" "),e("li",[t._v("HTMLVideoElement.poster：字符串，表示一个图像文件的 URL，用来在无法获取视频文件时替代显示，对应 HTML 属性"),e("code",[t._v("poster")]),t._v("。")])]),t._v(" "),e("p",[t._v("HTMLVideoElement 接口的方法。")]),t._v(" "),e("ul",[e("li",[t._v("HTMLVideoElement.getVideoPlaybackQuality()：返回一个对象，包含了当前视频回放的一些数据。")])]),t._v(" "),e("h2",{attrs:{id:"htmlaudioelement-接口"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#htmlaudioelement-接口"}},[t._v("#")]),t._v(" HTMLAudioElement 接口")]),t._v(" "),e("p",[e("code",[t._v("HTMLAudioElement")]),t._v("接口代表了"),e("code",[t._v("<audio>")]),t._v("元素。")]),t._v(" "),e("p",[t._v("该接口继承了"),e("code",[t._v("HTMLMediaElement")]),t._v("，但是没有定义自己的属性和方法。浏览器原生提供一个"),e("code",[t._v("Audio()")]),t._v("构造函数，返回的就是"),e("code",[t._v("HTMLAudioElement")]),t._v("实例。")]),t._v(" "),e("div",{staticClass:"language-javascript line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-javascript"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" song "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Audio")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("URLString"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("p",[e("code",[t._v("Audio()")]),t._v("构造函数接受一个字符串作为参数，表示媒体文件的 URL。如果省略这个参数，可以稍后通过"),e("code",[t._v("src")]),t._v("属性指定。")]),t._v(" "),e("p",[t._v("生成"),e("code",[t._v("HTMLAudioElement")]),t._v("实例以后，不用插入 DOM，可以直接用"),e("code",[t._v("play()")]),t._v("方法在背景播放。")]),t._v(" "),e("div",{staticClass:"language-javascript line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-javascript"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" a "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Audio")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("canPlayType")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'audio/wav'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  a"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("src "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'soundeffect.wav'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  a"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("play")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br")])]),e("h2",{attrs:{id:"事件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#事件"}},[t._v("#")]),t._v(" 事件")]),t._v(" "),e("p",[e("code",[t._v("<video>")]),t._v("和"),e("code",[t._v("<audio>")]),t._v("元素有以下事件。")]),t._v(" "),e("ul",[e("li",[t._v("loadstart：开始加载媒体文件时触发。")]),t._v(" "),e("li",[t._v("progress：媒体文件加载过程中触发，大概是每秒触发2到8次。")]),t._v(" "),e("li",[t._v("loadedmetadata：媒体文件元数据加载成功时触发。")]),t._v(" "),e("li",[t._v("loadeddata：当前播放位置加载成功后触发。")]),t._v(" "),e("li",[t._v("canplay：已经加载了足够的数据，可以开始播放时触发，后面可能还会请求数据。")]),t._v(" "),e("li",[t._v("canplaythrough：已经加载了足够的数据，可以一直播放时触发，后面不需要继续请求数据。")]),t._v(" "),e("li",[t._v("suspend：已经缓冲了足够的数据，暂时停止下载时触发。")]),t._v(" "),e("li",[t._v("stalled：尝试加载数据，但是没有数据返回时触发。")]),t._v(" "),e("li",[t._v("play：调用"),e("code",[t._v("play()")]),t._v("方法时或自动播放启动时触发。如果已经加载了足够的数据，这个事件后面会紧跟"),e("code",[t._v("playing")]),t._v("事件，否则会触发"),e("code",[t._v("waiting")]),t._v("事件。")]),t._v(" "),e("li",[t._v("waiting：由于没有足够的缓存数据，无法播放或播放停止时触发。一旦缓冲数据足够开始播放，后面就会紧跟"),e("code",[t._v("playing")]),t._v("事件。")]),t._v(" "),e("li",[t._v("playing：媒体开始播放时触发。")]),t._v(" "),e("li",[t._v("timeupdate："),e("code",[t._v("currentTime")]),t._v("属性变化时触发，每秒可能触发4到60次。")]),t._v(" "),e("li",[t._v("pause：调用"),e("code",[t._v("pause()")]),t._v("方法、播放暂停时触发。")]),t._v(" "),e("li",[t._v("seeking：脚本或者用户要求播放某个没有缓冲的位置，播放停止开始加载数据时触发。此时，"),e("code",[t._v("seeking")]),t._v("属性返回"),e("code",[t._v("true")]),t._v("。")]),t._v(" "),e("li",[t._v("seeked："),e("code",[t._v("seeking")]),t._v("属性变回"),e("code",[t._v("false")]),t._v("时触发。")]),t._v(" "),e("li",[t._v("ended：媒体文件播放完毕时触发。")]),t._v(" "),e("li",[t._v("durationchange："),e("code",[t._v("duration")]),t._v("属性变化时触发。")]),t._v(" "),e("li",[t._v("volumechange：音量变化时触发。")]),t._v(" "),e("li",[t._v("ratechange：播放速度或默认的播放速度变化时触发。")]),t._v(" "),e("li",[t._v("abort：停止加载媒体文件时触发，通常是用户主动要求停止下载。")]),t._v(" "),e("li",[t._v("error：网络或其他原因导致媒体文件无法加载时触发。")]),t._v(" "),e("li",[t._v("emptied：由于"),e("code",[t._v("error")]),t._v("或"),e("code",[t._v("abort")]),t._v("事件导致"),e("code",[t._v("networkState")]),t._v("属性变成无法获取数据时触发。")])])])}),[],!1,null,null,null);a.default=n.exports}}]);