(window.webpackJsonp=window.webpackJsonp||[]).push([[164],{583:function(s,a,t){"use strict";t.r(a);var e=t(65),n=Object(e.a)({},(function(){var s=this,a=s.$createElement,t=s._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h1",{attrs:{id:"数据类型概述"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#数据类型概述"}},[s._v("#")]),s._v(" 数据类型概述")]),s._v(" "),t("h2",{attrs:{id:"一、简介"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#一、简介"}},[s._v("#")]),s._v(" 一、简介")]),s._v(" "),t("p",[s._v("JavaScript 语言的每一个值，都属于某一种数据类型。")]),s._v(" "),t("p",[s._v("JavaScript 的数据类型，共有 8 种。（最新的 ECMAScript 标准定义了8种数据类型。ES6 又新增了Symbol 、BigInt 类型的值。）")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("七种基本数据类型：")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("布尔值（boolean）：表示真伪的两个特殊值，即"),t("code",[s._v("true")]),s._v("（真）和"),t("code",[s._v("false")]),s._v("（假）。")])]),s._v(" "),t("li",[t("p",[t("code",[s._v("null")]),s._v("：表示空值，即此处的值为空。")])]),s._v(" "),t("li",[t("p",[t("code",[s._v("undefined")]),s._v("：表示“未定义”或不存在，即由于目前没有定义，所以此处暂时没有任何值。")])]),s._v(" "),t("li",[t("p",[s._v("数值（number）：整数和小数（比如 "),t("code",[s._v("1")]),s._v(" 和 "),t("code",[s._v("3.14")]),s._v(" ）。")])]),s._v(" "),t("li",[t("p",[s._v("任意精度的整数（BigInt），可以安全地存储和操作大整数，甚至可以超过数字的安全整数限制。")])]),s._v(" "),t("li",[t("p",[s._v("字符串（string）：文本（比如 "),t("code",[s._v("Hello World")]),s._v(" ）。")])]),s._v(" "),t("li",[t("p",[s._v("代表（Symbol）：一种实例是唯一且不可改变的数据类型。")])])])]),s._v(" "),t("li",[t("p",[s._v("对象（object）：各种值组成的集合。")])])]),s._v(" "),t("p",[s._v("通常，数值、字符串、布尔值这三种类型，合称为原始类型（primitive type）的值，即它们是最基本的数据类型，不能再细分了。对象则称为合成类型（complex type）的值，因为一个对象往往是多个原始类型的值的合成，可以看作是一个存放各种值的容器。至于 "),t("code",[s._v("undefined")]),s._v(" 和 "),t("code",[s._v("null")]),s._v("，一般将它们看成两个特殊值。")]),s._v(" "),t("p",[s._v("对象是最复杂的数据类型，又可以分成三个子类型。")]),s._v(" "),t("ul",[t("li",[s._v("狭义的对象（object）")]),s._v(" "),t("li",[s._v("数组（array）")]),s._v(" "),t("li",[s._v("函数（function）")])]),s._v(" "),t("p",[s._v("狭义的对象和数组是两种不同的数据组合方式，除非特别声明，本教程的“对象”都特指狭义的对象。函数其实是处理数据的方法，JavaScript 把它当成一种数据类型，可以赋值给变量，这为编程带来了很大的灵活性，也为 JavaScript 的“函数式编程”奠定了基础。")]),s._v(" "),t("h2",{attrs:{id:"二、typeof-运算符"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#二、typeof-运算符"}},[s._v("#")]),s._v(" 二、typeof 运算符")]),s._v(" "),t("p",[s._v("JavaScript 有三种方法，可以确定一个值到底是什么类型。")]),s._v(" "),t("ul",[t("li",[t("code",[s._v("typeof")]),s._v("运算符")]),s._v(" "),t("li",[t("code",[s._v("instanceof")]),s._v("运算符")]),s._v(" "),t("li",[t("code",[s._v("Object.prototype.toString")]),s._v("方法")])]),s._v(" "),t("p",[t("code",[s._v("instanceof")]),s._v("运算符和"),t("code",[s._v("Object.prototype.toString")]),s._v("方法，将在后文介绍。这里介绍"),t("code",[s._v("typeof")]),s._v("运算符。")]),s._v(" "),t("p",[t("code",[s._v("typeof")]),s._v("运算符可以返回一个值的数据类型。")]),s._v(" "),t("p",[s._v("数值、字符串、布尔值分别返回"),t("code",[s._v("number")]),s._v("、"),t("code",[s._v("string")]),s._v("、"),t("code",[s._v("boolean")]),s._v("。")]),s._v(" "),t("div",{staticClass:"language-javascript line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-javascript"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("typeof")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("123")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// "number"')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("typeof")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'123'")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// "string"')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("typeof")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("false")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// "boolean"')]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("p",[s._v("函数返回"),t("code",[s._v("function")]),s._v("。")]),s._v(" "),t("div",{staticClass:"language-javascript line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-javascript"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("f")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("typeof")]),s._v(" f\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// "function"')]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("p",[t("code",[s._v("undefined")]),s._v("返回"),t("code",[s._v("undefined")]),s._v("。")]),s._v(" "),t("div",{staticClass:"language-javascript line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-javascript"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("typeof")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("undefined")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// "undefined"')]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("p",[s._v("利用这一点，"),t("code",[s._v("typeof")]),s._v("可以用来检查一个没有声明的变量，而不报错。")]),s._v(" "),t("div",{staticClass:"language-javascript line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-javascript"}},[t("code",[s._v("v\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// ReferenceError: v is not defined")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("typeof")]),s._v(" v\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// "undefined"')]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br")])]),t("p",[s._v("上面代码中，变量"),t("code",[s._v("v")]),s._v("没有用"),t("code",[s._v("var")]),s._v("命令声明，直接使用就会报错。但是，放在"),t("code",[s._v("typeof")]),s._v("后面，就不报错了，而是返回"),t("code",[s._v("undefined")]),s._v("。")]),s._v(" "),t("p",[s._v("实际编程中，这个特点通常用在判断语句。")]),s._v(" "),t("div",{staticClass:"language-javascript line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-javascript"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 错误的写法")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("v"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// ...")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// ReferenceError: v is not defined")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 正确的写法")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("typeof")]),s._v(" v "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("===")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"undefined"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// ...")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br")])]),t("p",[s._v("对象返回"),t("code",[s._v("object")]),s._v("。")]),s._v(" "),t("div",{staticClass:"language-javascript line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-javascript"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("typeof")]),s._v(" window "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// "object"')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("typeof")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// "object"')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("typeof")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// "object"')]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("p",[s._v("上面代码中，空数组（"),t("code",[s._v("[]")]),s._v("）的类型也是"),t("code",[s._v("object")]),s._v("，这表示在 JavaScript 内部，数组本质上只是一种特殊的对象。这里顺便提一下，"),t("code",[s._v("instanceof")]),s._v("运算符可以区分数组和对象。"),t("code",[s._v("instanceof")]),s._v("运算符的详细解释，请见《面向对象编程》一章。")]),s._v(" "),t("div",{staticClass:"language-javascript line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-javascript"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" o "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" a "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\no "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("instanceof")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Array")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// false")]),s._v("\na "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("instanceof")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Array")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// true")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br")])]),t("p",[t("code",[s._v("null")]),s._v("返回"),t("code",[s._v("object")]),s._v("。")]),s._v(" "),t("div",{staticClass:"language-javascript line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-javascript"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("typeof")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// "object"')]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[t("code",[s._v("null")]),s._v("的类型是"),t("code",[s._v("object")]),s._v("，这是由于历史原因造成的。1995年的 JavaScript 语言第一版，只设计了五种数据类型（对象、整数、浮点数、字符串和布尔值），没考虑"),t("code",[s._v("null")]),s._v("，只把它当作"),t("code",[s._v("object")]),s._v("的一种特殊值。后来"),t("code",[s._v("null")]),s._v("独立出来，作为一种单独的数据类型，为了兼容以前的代码，"),t("code",[s._v("typeof null")]),s._v("返回"),t("code",[s._v("object")]),s._v("就没法改变了。")]),s._v(" "),t("h2",{attrs:{id:"参考链接"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#参考链接"}},[s._v("#")]),s._v(" 参考链接")]),s._v(" "),t("ul",[t("li",[s._v("Axel Rauschmayer, "),t("a",{attrs:{href:"http://www.2ality.com/2011/11/improving-typeof.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("Improving the JavaScript typeof operator"),t("OutboundLink")],1)])])])}),[],!1,null,null,null);a.default=n.exports}}]);