(window.webpackJsonp=window.webpackJsonp||[]).push([[192],{616:function(t,s,a){"use strict";a.r(s);var e=a(65),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"_03-生命周期-lifecycle"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_03-生命周期-lifecycle"}},[t._v("#")]),t._v(" 03_生命周期 LifeCycle")]),t._v(" "),a("blockquote",[a("p",[t._v("📢 大家好，我是Milo")]),t._v(" "),a("p",[t._v("📢 这篇文章是学习 React 中 生命周期的学习笔记")])]),t._v(" "),a("h2",{attrs:{id:"引言"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#引言"}},[t._v("#")]),t._v(" 引言")]),t._v(" "),a("p",[t._v("在 React 中为我们提供了一些生命周期钩子函数，让我们能在 React 执行的重要阶段，在钩子函数中做一些事情。那么在 React 的生命周期中，有哪些钩子函数呢，我们来总结一下")]),t._v(" "),a("p",[t._v("React 生命周期（新）主要包括三个阶段：初始化阶段，更新阶段，销毁阶段，如下图所示：")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://ljcimg.oss-cn-beijing.aliyuncs.com/img/image-20210821102622645.png",alt:"image-20210821102622645"}})]),t._v(" "),a("h2",{attrs:{id:"一、初始化阶段"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#一、初始化阶段"}},[t._v("#")]),t._v(" 一、初始化阶段")]),t._v(" "),a("h3",{attrs:{id:"_1-constructor-执行"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-constructor-执行"}},[t._v("#")]),t._v(" 1 constructor 执行")]),t._v(" "),a("p",[a("code",[t._v("constructor")]),t._v(" 在组件初始化的时候只会执行一次")]),t._v(" "),a("p",[t._v("通常它用于做这两件事")]),t._v(" "),a("ol",[a("li",[t._v("初始化函数内部 "),a("code",[t._v("state")])]),t._v(" "),a("li",[t._v("绑定函数")])]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("constructor")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("props")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'进入构造器'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("super")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("props"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("state "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("count")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//解决demo中this指向问题(绑定函数)")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("death "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("death")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("bind")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br")])]),a("p",[t._v("现在我们通常不会使用 "),a("code",[t._v("constructor")]),t._v(" 属性，而是改用类加箭头函数的方法，来替代 "),a("code",[t._v("constructor")])]),t._v(" "),a("p",[t._v("例如，我们可以这样初始化 "),a("code",[t._v("state")])]),t._v(" "),a("div",{staticClass:"language-jsx line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-jsx"}},[a("code",[t._v("state "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("count")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br")])]),a("p",[t._v("例如，我们可以这样创建函数")]),t._v(" "),a("div",{staticClass:"language-jsx line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-jsx"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//自定义方法————要用赋值语句的形式+箭头函数")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("death")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])]),a("h3",{attrs:{id:"_2-getderivedstatefromprops-执行-新钩子"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-getderivedstatefromprops-执行-新钩子"}},[t._v("#")]),t._v(" 2 getDerivedStateFromProps 执行 （新钩子）")]),t._v(" "),a("p",[t._v("// 从"),a("code",[t._v("Props")]),t._v("参数中获得派生的（衍生的）状态"),a("code",[t._v("State")])]),t._v(" "),a("p",[t._v("这个是 React 新版本中新增的2个钩子之一，据说很少用。")]),t._v(" "),a("p",[a("code",[t._v("getDerivedStateFromProps")]),t._v(" 在初始化和更新中都会被调用，并且在 "),a("code",[t._v("render")]),t._v(" 方法之前调用，它返回一个对象用来更新 "),a("code",[t._v("state")])]),t._v(" "),a("p",[a("code",[t._v("getDerivedStateFromProps")]),t._v(" 是类上直接绑定的静态（"),a("code",[t._v("static")]),t._v("）方法，所以调用时前面加上"),a("code",[t._v("static")])]),t._v(" "),a("p",[t._v("它接收两个参数 "),a("code",[t._v("props")]),t._v(" 和 "),a("code",[t._v("state")]),t._v("，其中"),a("code",[t._v("props")]),t._v(" 是即将要替代 "),a("code",[t._v("state")]),t._v(" 的值，而 "),a("code",[t._v("state")]),t._v(" 是当前未替代前的值")]),t._v(" "),a("blockquote",[a("p",[t._v("注意："),a("code",[t._v("state")]),t._v(" 的值在任何时候都取决于传入的 "),a("code",[t._v("props")]),t._v(" ，不会再改变")])]),t._v(" "),a("p",[t._v("例如：")]),t._v(" "),a("div",{staticClass:"language-jsx line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-jsx"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getDerivedStateFromProps")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("props")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" props\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\nReactDOM"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("render")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Count")])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("count")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("109"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("document"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getElementById")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'.test'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br")])]),a("p",[a("code",[t._v("count")]),t._v(" 的值不会改变，一直是 109，初始化state和更新setState否无法改变")]),t._v(" "),a("h3",{attrs:{id:"_3-render-执行-开发常用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-render-执行-开发常用"}},[t._v("#")]),t._v(" 3 render 执行（开发常用）")]),t._v(" "),a("p",[a("code",[t._v("render()")]),t._v(" 方法是组件中必须实现的方法，用于渲染 DOM ，但是它不会真正的操作 DOM，它的作用是把需要的东西返回出去。")]),t._v(" "),a("p",[t._v("实现渲染 DOM 操作的是 "),a("code",[t._v("ReactDOM.render()")])]),t._v(" "),a("blockquote",[a("p",[t._v("注意：避免在 "),a("code",[t._v("render")]),t._v(" 中使用 "),a("code",[t._v("setState")]),t._v(" ，否则会死循环")])]),t._v(" "),a("h3",{attrs:{id:"_4-componentdidmount-执行-开发常用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-componentdidmount-执行-开发常用"}},[t._v("#")]),t._v(" 4 componentDidMount 执行（开发常用）")]),t._v(" "),a("p",[t._v("//组件更新完毕的钩子")]),t._v(" "),a("p",[a("code",[t._v("componentDidMount")]),t._v(" 的执行意味着初始化挂载操作已经基本完成，它主要用于组件挂载完成后做某些操作")]),t._v(" "),a("p",[t._v("这个挂载完成指的是：组件插入 DOM tree")]),t._v(" "),a("p",[t._v("一般在这个钩子中做一些初始化的事，例如：开启定时器、发送网络请求、订阅消息")]),t._v(" "),a("h3",{attrs:{id:"初始化阶段总结"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#初始化阶段总结"}},[t._v("#")]),t._v(" 初始化阶段总结")]),t._v(" "),a("p",[t._v("由ReactDOM.render()触发---初次渲染")]),t._v(" "),a("ol",[a("li",[t._v("constructor()")]),t._v(" "),a("li",[t._v("getDerivedStateFromProps")]),t._v(" "),a("li",[t._v("render()")]),t._v(" "),a("li",[t._v("componentDidMount() =====> 常用")])]),t._v(" "),a("p",[a("code",[t._v("componentWillMount")])]),t._v(" "),a("p",[t._v("// 组件将要挂载的钩子")]),t._v(" "),a("blockquote",[a("p",[t._v("如果存在 "),a("code",[t._v("getDerivedStateFromProps")]),t._v(" 和 "),a("code",[t._v("getSnapshotBeforeUpdate")]),t._v(" 就不会执行生命周期"),a("code",[t._v("componentWillMount")]),t._v("。")])]),t._v(" "),a("p",[t._v("该方法只在挂载的时候调用一次，表示组件将要被挂载，并且在 "),a("code",[t._v("render")]),t._v(" 方法之前调用。")]),t._v(" "),a("p",[t._v("这个方法在 React 18版本中将要被废弃，官方解释是在 React 异步机制下，如果滥用这个钩子可能会有 Bug")]),t._v(" "),a("h2",{attrs:{id:"二、更新阶段"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#二、更新阶段"}},[t._v("#")]),t._v(" 二、更新阶段")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://ljcimg.oss-cn-beijing.aliyuncs.com/img/image-20210821102622645.png",alt:"image-20210821102622645"}})]),t._v(" "),a("p",[t._v("这里记录新生命周期的流程")]),t._v(" "),a("h3",{attrs:{id:"_1-getderivedstatefromprops-执行"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-getderivedstatefromprops-执行"}},[t._v("#")]),t._v(" 1 getDerivedStateFromProps 执行")]),t._v(" "),a("p",[t._v("//  若state的值在任何时候都取决于props，那么可以使用getDerivedStateFromProps")]),t._v(" "),a("p",[t._v("执行生命周期"),a("code",[t._v("getDerivedStateFromProps")]),t._v("， 返回的值用于合并 "),a("code",[t._v("state")]),t._v("，生成新的"),a("code",[t._v("state")]),t._v("。")]),t._v(" "),a("h3",{attrs:{id:"_2-shouldcomponentupdat-执行"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-shouldcomponentupdat-执行"}},[t._v("#")]),t._v(" 2 shouldComponentUpdat 执行")]),t._v(" "),a("p",[t._v("//  控制组件更新的“阀门”")]),t._v(" "),a("p",[a("code",[t._v("shouldComponentUpdate()")]),t._v(" 在组件更新之前调用，可以通过返回值来控制组件是否更新的“阀门”，允许更新返回 "),a("code",[t._v("true")]),t._v(" ，反之不更新")]),t._v(" "),a("h3",{attrs:{id:"_3-render-执行"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-render-执行"}},[t._v("#")]),t._v(" 3 render 执行")]),t._v(" "),a("p",[t._v("在控制是否更新的函数中，如果返回 "),a("code",[t._v("true")]),t._v(" 才会执行 "),a("code",[t._v("render")]),t._v(" ,得到最新的 "),a("code",[t._v("React element")])]),t._v(" "),a("h3",{attrs:{id:"_4-getsnapshotbeforeupdate-执行"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-getsnapshotbeforeupdate-执行"}},[t._v("#")]),t._v(" 4 getSnapshotBeforeUpdate 执行")]),t._v(" "),a("p",[t._v("//  在更新之前获取快照")]),t._v(" "),a("p",[t._v("在最近一次的渲染输出之前被提交之前调用，也就是即将挂载时调用")]),t._v(" "),a("p",[t._v("相当于淘宝购物的快照，会保留下单前的商品内容，在 React 中就相当于是 即将更新前的状态")]),t._v(" "),a("div",{staticClass:"language-jsx line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-jsx"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getSnapshotBeforeUpdate")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'getSnapshotBeforeUpdate'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'hello world'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br")])]),a("blockquote",[a("p",[t._v("它可以使组件在 DOM 真正更新之前捕获一些信息（例如滚动位置），此生命周期返回的任何值都会作为参数传递给 "),a("code",[t._v("componentDidUpdate()")]),t._v("。如不需要传递任何值，那么请返回 null")])]),t._v(" "),a("h3",{attrs:{id:"_5-componentdidupdate-执行"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-componentdidupdate-执行"}},[t._v("#")]),t._v(" 5 componentDidUpdate 执行")]),t._v(" "),a("p",[t._v("//  组件更新完毕的钩子")]),t._v(" "),a("p",[t._v("组件在更新完毕后会立即被调用，首次渲染不会调用")]),t._v(" "),a("p",[a("code",[t._v("componentDidUpdate()")]),t._v("会接受三个参数，"),a("code",[t._v("prevProps")]),t._v(","),a("code",[t._v("prevState")]),t._v(","),a("code",[t._v("snapshotValue")]),t._v("，因为更新执行完毕，所以三个参数分别是之前的参数props、之前的状态state以及 "),a("code",[t._v("getSnapshotBeforeUpdate()")]),t._v("的快照返回值")]),t._v(" "),a("div",{staticClass:"language-jsx line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-jsx"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("componentDidUpdate")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("preProps"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("preState"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("snapshotValue")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'componentDidUpdate'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("preProps"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("preState"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("snapshotValue"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br")])]),a("hr"),t._v(" "),a("h3",{attrs:{id:"更新阶段总结"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#更新阶段总结"}},[t._v("#")]),t._v(" 更新阶段总结")]),t._v(" "),a("p",[t._v("由组件内部this.setSate()或父组件重新render触发")]),t._v(" "),a("ol",[a("li",[t._v("getDerivedStateFromProps")]),t._v(" "),a("li",[t._v("shouldComponentUpdate()")]),t._v(" "),a("li",[t._v("render()")]),t._v(" "),a("li",[t._v("getSnapshotBeforeUpdate")]),t._v(" "),a("li",[t._v("componentDidUpdate()")])]),t._v(" "),a("p",[t._v("到此更新阶段就结束了，在 React 旧版本中有两个与更新有关的钩子函数即将废弃")]),t._v(" "),a("p",[a("code",[t._v("componentWillReceiveProps")])]),t._v(" "),a("p",[t._v("//  组件将要接收新的props的钩子")]),t._v(" "),a("p",[t._v("有个坑：第一次参数传递不算，第二次参数传递才开始调用")]),t._v(" "),a("div",{staticClass:"language-jsx line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-jsx"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("componentWillReceiveProps")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("props")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'componentWillReceiveProps'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("props"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br")])]),a("p",[a("code",[t._v("componentWillUpdate")])]),t._v(" "),a("p",[t._v("//  组件将要更新的钩子")]),t._v(" "),a("p",[a("code",[t._v("componentWillUpdate")]),t._v(" 在 "),a("code",[t._v("render")]),t._v(" 之前执行，表示组件将要更新")]),t._v(" "),a("h2",{attrs:{id:"三、销毁阶段"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#三、销毁阶段"}},[t._v("#")]),t._v(" 三、销毁阶段")]),t._v(" "),a("h3",{attrs:{id:"componentwillunmount-执行"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#componentwillunmount-执行"}},[t._v("#")]),t._v(" componentWillUnmount  执行")]),t._v(" "),a("p",[t._v("在组件即将被卸载或销毁时进行调用。")]),t._v(" "),a("h2",{attrs:{id:"总结"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[t._v("#")]),t._v(" 总结")]),t._v(" "),a("p",[a("strong",[t._v("初始化阶段:")]),t._v(" 由ReactDOM.render()触发---初次渲染")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("constructor(props)")])]),t._v(" "),a("li",[a("p",[t._v("static getDerivedStateFromProps()")])]),t._v(" "),a("li",[a("p",[t._v("render()")])]),t._v(" "),a("li",[a("p",[t._v("componentDidMount() =====> 常用，一般在这个钩子中做一些初始化的事，例如：开启定时器、发送网络请求、订阅消息")])])]),t._v(" "),a("p",[a("strong",[t._v("更新阶段:")]),t._v(" 由组件内部this.setSate()或父组件重新render触发")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("static getDerivedStateFromProps()")])]),t._v(" "),a("li",[a("p",[t._v("shouldComponentUpdate()")])]),t._v(" "),a("li",[a("p",[t._v("render()")])]),t._v(" "),a("li",[a("p",[t._v("getSnapshotBeforeUpdate(props, state)")])]),t._v(" "),a("li",[a("p",[t._v("componentDidUpdate(prevProps,prevState,snapShotValue)")])])]),t._v(" "),a("p",[t._v("**卸载组件: ** 由ReactDOM.unmountComponentAtNode()触发")]),t._v(" "),a("ul",[a("li",[t._v("componentWillUnmount()  =====> 常用，一般在这个钩子中做一些收尾的事，例如：关闭定时器、取消订阅消息")])]),t._v(" "),a("hr"),t._v(" "),a("blockquote",[a("p",[t._v("初学 React ，对生命周期还没有深入的理解，只能大概知道在什么时候触发哪个钩子")])])])}),[],!1,null,null,null);s.default=n.exports}}]);